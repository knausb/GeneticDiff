// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// count_alleles
Rcpp::DataFrame count_alleles(Rcpp::StringMatrix GT);
RcppExport SEXP _GeneticDiff_count_alleles(SEXP GTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringMatrix >::type GT(GTSEXP);
    rcpp_result_gen = Rcpp::wrap(count_alleles(GT));
    return rcpp_result_gen;
END_RCPP
}
// genotype_split
Rcpp::StringVector genotype_split(std::string myGT);
RcppExport SEXP _GeneticDiff_genotype_split(SEXP myGTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type myGT(myGTSEXP);
    rcpp_result_gen = Rcpp::wrap(genotype_split(myGT));
    return rcpp_result_gen;
END_RCPP
}
// rgt
Rcpp::CharacterMatrix rgt(int nsamp, int nvar, Rcpp::NumericVector pphased, Rcpp::NumericVector pploid, Rcpp::NumericVector pallele, int verbose);
RcppExport SEXP _GeneticDiff_rgt(SEXP nsampSEXP, SEXP nvarSEXP, SEXP pphasedSEXP, SEXP pploidSEXP, SEXP palleleSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type nvar(nvarSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pphased(pphasedSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pploid(pploidSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pallele(palleleSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(rgt(nsamp, nvar, pphased, pploid, pallele, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GeneticDiff_count_alleles", (DL_FUNC) &_GeneticDiff_count_alleles, 1},
    {"_GeneticDiff_genotype_split", (DL_FUNC) &_GeneticDiff_genotype_split, 1},
    {"_GeneticDiff_rgt", (DL_FUNC) &_GeneticDiff_rgt, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_GeneticDiff(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
